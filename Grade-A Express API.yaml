openapi: 3.0.3
info:
  title: Grade-A Express API
  version: 1.0.0
  description: API for logistics and Buy4Me services
paths:
  /api/accounts/signup/:
    post:
      operationId: accounts_signup_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/accounts/users/:
    get:
      operationId: accounts_users_list
      description: Get a list of all users
      summary: List users
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: user_type
        schema:
          type: string
        description: Filter users by type (WALK_IN, BUY4ME, ADMIN, SUPER_ADMIN)
      tags:
      - users
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: accounts_users_create
      description: Create a new user account
      summary: Create user
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/accounts/users/{id}/:
    get:
      operationId: accounts_users_retrieve
      description: ViewSet for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: accounts_users_update
      description: ViewSet for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: accounts_users_partial_update
      description: ViewSet for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: accounts_users_destroy
      description: ViewSet for viewing and editing user instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/accounts/users/me/:
    get:
      operationId: accounts_users_me_retrieve
      description: Returns the authenticated user's information
      summary: Get current user
      tags:
      - users
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/buy4me/requests/:
    get:
      operationId: buy4me_requests_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - buy4me
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBuy4MeRequestList'
          description: ''
    post:
      operationId: buy4me_requests_create
      tags:
      - buy4me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buy4MeRequestCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Buy4MeRequestCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Buy4MeRequestCreate'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeRequestCreate'
          description: ''
  /api/buy4me/requests/{id}/:
    get:
      operationId: buy4me_requests_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - buy4me
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeRequest'
          description: ''
    put:
      operationId: buy4me_requests_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - buy4me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buy4MeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Buy4MeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Buy4MeRequest'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeRequest'
          description: ''
    patch:
      operationId: buy4me_requests_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - buy4me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeRequest'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeRequest'
          description: ''
    delete:
      operationId: buy4me_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - buy4me
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/buy4me/requests/{id}/update_status/:
    patch:
      operationId: buy4me_requests_update_status_partial_update
      description: Update the status of a Buy4Me request
      summary: Update request status
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - buy4me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeRequest'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeRequest'
          description: ''
  /api/buy4me/requests/{request_pk}/items/:
    get:
      operationId: buy4me_requests_items_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: request_pk
        schema:
          type: string
        required: true
      tags:
      - buy4me
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBuy4MeItemList'
          description: ''
    post:
      operationId: buy4me_requests_items_create
      parameters:
      - in: path
        name: request_pk
        schema:
          type: string
        required: true
      tags:
      - buy4me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buy4MeItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Buy4MeItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Buy4MeItem'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeItem'
          description: ''
  /api/buy4me/requests/{request_pk}/items/{id}/:
    get:
      operationId: buy4me_requests_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: request_pk
        schema:
          type: string
        required: true
      tags:
      - buy4me
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeItem'
          description: ''
    put:
      operationId: buy4me_requests_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: request_pk
        schema:
          type: string
        required: true
      tags:
      - buy4me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buy4MeItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Buy4MeItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Buy4MeItem'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeItem'
          description: ''
    patch:
      operationId: buy4me_requests_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: request_pk
        schema:
          type: string
        required: true
      tags:
      - buy4me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBuy4MeItem'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buy4MeItem'
          description: ''
    delete:
      operationId: buy4me_requests_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: request_pk
        schema:
          type: string
        required: true
      tags:
      - buy4me
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/payments/invoices/:
    get:
      operationId: payments_invoices_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceList'
          description: ''
    post:
      operationId: payments_invoices_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/payments/invoices/{id}/:
    get:
      operationId: payments_invoices_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    put:
      operationId: payments_invoices_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: payments_invoices_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    delete:
      operationId: payments_invoices_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/payments/invoices/{id}/pdf/:
    get:
      operationId: payments_invoices_pdf_retrieve
      description: Generate PDF version of the invoice
      summary: Generate PDF
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/payments/payments/:
    get:
      operationId: payments_payments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: payments_payments_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/payments/payments/{id}/:
    get:
      operationId: payments_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: payments_payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: payments_payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: payments_payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/payments/payments/{id}/verify/:
    post:
      operationId: payments_payments_verify_create
      description: Verify payment status with payment gateway
      summary: Verify payment
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/payments/payments/initiate/:
    post:
      operationId: payments_payments_initiate_create
      summary: Initiate payment
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInitiate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentInitiate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentInitiate'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/payments/refunds/:
    get:
      operationId: payments_refunds_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRefundList'
          description: ''
    post:
      operationId: payments_refunds_create
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Refund'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Refund'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
  /api/payments/refunds/{id}/:
    get:
      operationId: payments_refunds_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this refund.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
    put:
      operationId: payments_refunds_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this refund.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Refund'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Refund'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
    patch:
      operationId: payments_refunds_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this refund.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRefund'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRefund'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRefund'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
    delete:
      operationId: payments_refunds_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this refund.
        required: true
      tags:
      - payments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/payments/refunds/{id}/process/:
    post:
      operationId: payments_refunds_process_create
      description: Process the refund through payment gateway
      summary: Process refund
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this refund.
        required: true
      tags:
      - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Refund'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Refund'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          description: ''
  /api/shipments/:
    get:
      operationId: shipments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - shipments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShipmentRequestList'
          description: ''
    post:
      operationId: shipments_create
      tags:
      - shipments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShipmentCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShipmentCreate'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentCreate'
          description: ''
  /api/shipments/{id}/:
    get:
      operationId: shipments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRequest'
          description: ''
    put:
      operationId: shipments_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShipmentRequest'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRequest'
          description: ''
    patch:
      operationId: shipments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShipmentRequest'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRequest'
          description: ''
    delete:
      operationId: shipments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipments
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/shipments/{id}/add_tracking/:
    post:
      operationId: shipments_add_tracking_create
      description: Add a new tracking update to the shipment
      summary: Add tracking update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShipmentRequest'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRequest'
          description: ''
  /api/shipments/{id}/update_status/:
    patch:
      operationId: shipments_update_status_partial_update
      description: Update the status of a shipment
      summary: Update shipment status
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShipmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShipmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShipmentRequest'
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentRequest'
          description: ''
  /api/shipping-rates/calculate/:
    get:
      operationId: shipping_rates_calculate_retrieve
      tags:
      - shipping-rates
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          description: No response body
    post:
      operationId: shipping_rates_calculate_create
      tags:
      - shipping-rates
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '201':
          description: No response body
  /api/shipping-rates/calculate/{id}/:
    get:
      operationId: shipping_rates_calculate_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipping-rates
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          description: No response body
    put:
      operationId: shipping_rates_calculate_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipping-rates
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          description: No response body
    patch:
      operationId: shipping_rates_calculate_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipping-rates
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          description: No response body
    delete:
      operationId: shipping_rates_calculate_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - shipping-rates
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '204':
          description: No response body
  /api/shipping-rates/calculate/calculate/:
    post:
      operationId: shipping_rates_calculate_calculate_create
      summary: Calculate shipping rate
      tags:
      - shipping-rates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingCalculator'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShippingCalculator'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShippingCalculator'
        required: true
      security:
      - jwtAuth: []
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      security:
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Buy4MeItem:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        product_name:
          type: string
          maxLength: 255
        product_url:
          type: string
          format: uri
          maxLength: 200
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        color:
          type: string
          maxLength: 50
        size:
          type: string
          maxLength: 50
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 3
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - product_name
      - product_url
      - total_price
      - unit_price
    Buy4MeRequest:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Buy4MeRequestStatusEnum'
        total_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        shipping_address:
          type: string
        notes:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Buy4MeItem'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - items
      - shipping_address
      - total_cost
      - updated_at
      - user
    Buy4MeRequestCreate:
      type: object
      properties:
        shipping_address:
          type: string
        notes:
          type: string
      required:
      - shipping_address
    Buy4MeRequestStatusEnum:
      enum:
      - DRAFT
      - SUBMITTED
      - ORDER_PLACED
      - IN_TRANSIT
      - WAREHOUSE_ARRIVED
      - SHIPPED_TO_CUSTOMER
      - COMPLETED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `SUBMITTED` - Submitted
        * `ORDER_PLACED` - Order Placed
        * `IN_TRANSIT` - In Transit
        * `WAREHOUSE_ARRIVED` - Warehouse Arrived
        * `SHIPPED_TO_CUSTOMER` - Shipped to Customer
        * `COMPLETED` - Completed
    Invoice:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: integer
          readOnly: true
        shipment:
          type: string
          nullable: true
        buy4me_request:
          type: string
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        due_date:
          type: string
          format: date
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - due_date
      - id
      - status
      - status_display
      - subtotal
      - total
      - user
    InvoiceStatusEnum:
      enum:
      - DRAFT
      - PENDING
      - PAID
      - OVERDUE
      - CANCELLED
      - REFUNDED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `PENDING` - Pending
        * `PAID` - Paid
        * `OVERDUE` - Overdue
        * `CANCELLED` - Cancelled
        * `REFUNDED` - Refunded
    PaginatedBuy4MeItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Buy4MeItem'
    PaginatedBuy4MeRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Buy4MeRequest'
    PaginatedInvoiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedRefundList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Refund'
    PaginatedShipmentRequestList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentRequest'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedBuy4MeItem:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        product_name:
          type: string
          maxLength: 255
        product_url:
          type: string
          format: uri
          maxLength: 200
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        color:
          type: string
          maxLength: 50
        size:
          type: string
          maxLength: 50
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
          maxLength: 3
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedBuy4MeRequest:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Buy4MeRequestStatusEnum'
        total_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        shipping_address:
          type: string
        notes:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Buy4MeItem'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedInvoice:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: integer
          readOnly: true
        shipment:
          type: string
          nullable: true
        buy4me_request:
          type: string
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/InvoiceStatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        due_date:
          type: string
          format: date
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPayment:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        invoice:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_method_display:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        transaction_id:
          type: string
          readOnly: true
          description: Payment gateway transaction ID
        payment_details:
          readOnly: true
          description: Additional payment details from gateway
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRefund:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        payment:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        reason:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/RefundStatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        refund_transaction_id:
          type: string
          readOnly: true
          description: Payment gateway refund transaction ID
        processed_by:
          type: integer
          readOnly: true
        processed_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedShipmentRequest:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        tracking_number:
          type: string
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/ShipmentRequestStatusEnum'
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        dimensions:
          description: 'Format: {"length": 10, "width": 10, "height": 10}'
        content_description:
          type: string
        delivery_address:
          type: string
        notes:
          type: string
        tracking_updates:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentTracking'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          maxLength: 15
        address:
          type: string
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        is_verified:
          type: boolean
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
    Payment:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        invoice:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        payment_method_display:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        transaction_id:
          type: string
          readOnly: true
          description: Payment gateway transaction ID
        payment_details:
          readOnly: true
          description: Additional payment details from gateway
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - id
      - invoice
      - payment_details
      - payment_method
      - payment_method_display
      - status
      - status_display
      - transaction_id
    PaymentInitiate:
      type: object
      properties:
        invoice_id:
          type: string
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        return_url:
          type: string
          format: uri
          description: URL to redirect after payment completion
      required:
      - invoice_id
      - payment_method
    PaymentMethodEnum:
      enum:
      - STRIPE
      - PAYPAL
      - BANK_TRANSFER
      - CASH
      type: string
      description: |-
        * `STRIPE` - Stripe
        * `PAYPAL` - PayPal
        * `BANK_TRANSFER` - Bank Transfer
        * `CASH` - Cash
    PaymentStatusEnum:
      enum:
      - PENDING
      - COMPLETED
      - FAILED
      - REFUNDED
      type: string
      description: |-
        * `PENDING` - Pending
        * `COMPLETED` - Completed
        * `FAILED` - Failed
        * `REFUNDED` - Refunded
    Refund:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        payment:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        reason:
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/RefundStatusEnum'
          readOnly: true
        status_display:
          type: string
          readOnly: true
        refund_transaction_id:
          type: string
          readOnly: true
          description: Payment gateway refund transaction ID
        processed_by:
          type: integer
          readOnly: true
        processed_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - created_at
      - id
      - payment
      - processed_by
      - processed_by_name
      - reason
      - refund_transaction_id
      - status
      - status_display
    RefundStatusEnum:
      enum:
      - PENDING
      - APPROVED
      - COMPLETED
      - REJECTED
      type: string
      description: |-
        * `PENDING` - Pending
        * `APPROVED` - Approved
        * `COMPLETED` - Completed
        * `REJECTED` - Rejected
    ShipmentCreate:
      type: object
      properties:
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        dimensions:
          description: 'Format: {"length": 10, "width": 10, "height": 10}'
        content_description:
          type: string
        delivery_address:
          type: string
        notes:
          type: string
      required:
      - content_description
      - delivery_address
      - weight
    ShipmentRequest:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        tracking_number:
          type: string
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/ShipmentRequestStatusEnum'
        cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        dimensions:
          description: 'Format: {"length": 10, "width": 10, "height": 10}'
        content_description:
          type: string
        delivery_address:
          type: string
        notes:
          type: string
        tracking_updates:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentTracking'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content_description
      - cost
      - created_at
      - delivery_address
      - id
      - tracking_number
      - tracking_updates
      - updated_at
      - user
      - weight
    ShipmentRequestStatusEnum:
      enum:
      - PENDING
      - PROCESSING
      - IN_TRANSIT
      - DELIVERED
      - CANCELLED
      type: string
      description: |-
        * `PENDING` - Pending
        * `PROCESSING` - Processing
        * `IN_TRANSIT` - In Transit
        * `DELIVERED` - Delivered
        * `CANCELLED` - Cancelled
    ShipmentTracking:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        location:
          type: string
          maxLength: 255
        status:
          type: string
          maxLength: 100
        description:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - description
      - id
      - location
      - status
      - timestamp
    ShippingCalculator:
      type: object
      properties:
        origin_country:
          type: string
          maxLength: 2
        destination_country:
          type: string
          maxLength: 2
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        length:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        width:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        service_type:
          type: string
      required:
      - destination_country
      - height
      - length
      - origin_country
      - weight
      - width
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          maxLength: 15
        address:
          type: string
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        is_verified:
          type: boolean
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - id
      - is_verified
      - username
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          maxLength: 15
        address:
          type: string
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        country:
          type: string
          maxLength: 100
      required:
      - password
      - username
    UserTypeEnum:
      enum:
      - WALK_IN
      - BUY4ME
      - ADMIN
      - SUPER_ADMIN
      type: string
      description: |-
        * `WALK_IN` - Walk In
        * `BUY4ME` - Buy4Me
        * `ADMIN` - Admin
        * `SUPER_ADMIN` - Super Admin
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: auth
  description: Authentication endpoints
- name: users
  description: User management endpoints
- name: shipments
  description: Shipment management endpoints
- name: buy4me
  description: Buy4Me service endpoints
